回溯算法：
    实际是决策树遍历问题
    需要考虑
        选择后的路径
        可选择的列表
        结束条件
主要框架
    result = []
    def backtrack(路径, 选择列表):
        if 满⾜结束条件:
            result.add(路径)
        return
        for 选择 in 选择列表:
            排除一些不合法的选择(比如自身，比如N皇后的规则等)
            做选择
            backtrack(路径, 选择列表)
            撤销选择
递归调⽤之前（做选择），在递归调⽤之后（撤销选择）
backtrack 函数时，需要维护⾛过的「路径」和当前可以做的「选择列表」，
当触发「结束条件」时，将「路径」记⼊结果集
回溯算法就是纯暴⼒穷举，复杂度⼀般都很⾼
